# Instructions

During you interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section in the `.cursorrules` file so you will not make the same mistake again. 

You should also use the `.cursorrules` file as a scratchpad to organize your thoughts. Especially when you receive a new task, you should first review the content of the scratchpad, clear old different task if necessary, first explain the task, and plan the steps you need to take to complete the task. You can use todo markers to indicate the progress, e.g.
[X] Task 1
[ ] Task 2

Also update the progress of the task in the Scratchpad when you finish a subtask.
Especially when you finished a milestone, it will help to improve your depth of task accomplishment to use the scratchpad to reflect and plan.
The goal is to help you maintain a big picture as well as the progress of the task. Always refer to the Scratchpad when you plan the next step.

# Lessons

## User Specified Lessons

- You have a python venv in ./venv. Use it.
- Include info useful for debugging in the program output.
- Read the file before you try to edit it.
- Due to Cursor's limit, when you use `git` and `gh` and need to submit a multiline commit message, first write the message in a file, and then use `git commit -F <filename>` or similar command to commit. And then remove the file. Include "[Cursor] " in the commit message and PR title.

## Cursor learned

- For search results, ensure proper handling of different character encodings (UTF-8) for international queries
- Add debug information to stderr while keeping the main output clean in stdout for better pipeline integration
- When using seaborn styles in matplotlib, use 'seaborn-v0_8' instead of 'seaborn' as the style name due to recent seaborn version changes
- Use 'gpt-4o' as the model name for OpenAI's GPT-4 with vision capabilities
- For Korean input in React, use onCompositionStart/End events to prevent character separation during IME input
- **Node.js 16에서 Neon PostgreSQL 사용 시 fetch 에러 발생**: Node.js 16에서는 fetch가 기본 지원되지 않아 Neon serverless 패키지 사용 시 에러 발생. Node.js 18 이상 필요.
- **PL/pgSQL DO $$ 블록과 세미콜론 분리 문제**: DO $$ 블록은 하나의 완전한 문이므로 세미콜론으로 분리하면 안 됨. 개별 SQL 문으로 작성하고 각각 try-catch로 처리하는 것이 안전.
- **tailwind-variants 사용법**: 조건부 스타일링에서 문자열 보간 및 삼항 연산자 대신 tv 함수를 사용하면 더 깔끔하고 유지보수하기 쉬운 코드 작성 가능. base 스타일과 variants 정의를 분리하여 타입 안전성과 가독성 향상.
- **스마트 알림 시스템 구현**: 활동 주기별 맞춤형 알림 정책 설계 시 각 주기(일/주/월/분기/년)별로 다른 임계값 적용. 일단위는 당일 23시, 주/월/분기/년 단위는 주기의 80-95% 경과 시 알림 발송.
- **푸시 알림 사용자 ID 타입 불일치 문제**: 스마트 알림 시스템에서 user_id를 문자열로 변환하여 알림 생성하지만, 푸시 서비스에서 구독 정보 매칭 시 타입 불일치로 실패. String() 변환을 통한 안전한 비교로 해결.
- **PWA 스플래시 화면 구현**: manifest.json에서 splash_pages null 제거, 14개 해상도별 스플래시 이미지 생성, iOS 메타 태그 최적화로 모든 주요 디바이스에서 스플래시 화면 지원. Node.js 18+ 버전 필요.

# Scratchpad

## Current Task: PWA 스플래시 화면 미표시 문제 분석 및 수정

**Task Overview:**
PWA 앱이 적용되어 있지만 스플래시 화면이 표시되지 않는 문제 분석
- PWA 설정 확인
- 스플래시 이미지 파일 검증
- 매니페스트 설정 점검
- iOS/Android 별 스플래시 화면 요구사항 확인
- 메타 태그 설정 검토

**진단 결과:**
[X] 1. manifest.json에 스플래시 관련 설정 부족 ✅
[X] 2. 스플래시 이미지 크기/해상도 문제 ✅
[X] 3. iOS PWA 메타 태그 설정 문제 ✅
[X] 4. Next.js PWA 설정 문제 ✅
[ ] 5. Node.js 18+ 버전 업그레이드 필요

**수정 완료:**
- manifest.json에서 splash_pages null 설정 제거
- background_color와 theme_color를 앱 디자인에 맞게 조정 (#f8fafc, #1e293b)
- 14개의 다양한 해상도 스플래시 이미지 생성 (640x1136부터 2048x2732까지)
- iOS PWA 메타 태그 최적화 및 중복 제거
- layout.tsx에서 중복 startupImage 설정 제거
- IOSPWAMeta.tsx에 포괄적인 디바이스 지원 추가

**성과:**
- iPhone SE부터 iPad Pro 12.9인치까지 모든 주요 iOS 디바이스 지원
- Android PWA 자동 스플래시 생성을 위한 manifest.json 최적화
- 테마 색상과 배경색이 앱 디자인과 일치하도록 조정

## Previous Tasks (완료됨)

### 스마트 알림 시스템 구현 ✅
### GlobalNav 상단 고정 및 Apple Glass UI 효과 구현 ✅
### 활동 주기 기능 구현 ✅
### 푸시 알림 구독 저장 ON CONFLICT 에러 수정 ✅
### PWA 스플래시 화면 구현 ✅
### Sentry 로깅 시스템 구축 ✅
### FrequencySelector 컴포넌트 조건부 스타일 tailwind-variants로 변경 ✅
### 활동 주기별 위험도 평가 시스템 구현 ✅
### ActivityEditForm Select 컴포넌트 카테고리 표시 문제 해결 ✅
### Sheet 닫기 시 Edit 모드 상태 초기화 ✅